{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","message","setMessage","useState","searchTerm","setSearchTerm","useEffect","fetch","then","res","text","data","catch","err","console","error","React","createElement","className","onSubmit","e","preventDefault","concat","json","result","type","value","onChange","target","placeholder","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0LA2CeA,MAxCf,WACE,MAAOC,EAASC,GAAcC,mBAAS,KAChCC,EAAYC,GAAiBF,mBAAS,IAoB7C,OAlBAG,oBAAU,KACRC,MAAM,cACHC,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,GAAQT,EAAWS,IACxBC,MAAMC,GAAOC,QAAQC,MAAM,uBAAwBF,KACrD,IAcDG,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,MAAIC,UAAU,cAAa,uBAC3BF,IAAAC,cAAA,QAAME,SAdYC,IACpBA,EAAEC,iBAEFd,MAAK,iBAAAe,OAAkBlB,IACpBI,KAAKC,GAAOA,EAAIc,QAChBf,KAAKG,IACJT,EAAWS,EAAKa,UAEjBZ,MAAMC,GAAOC,QAAQC,MAAM,8BAA+BF,KAM7BK,UAAU,eACtCF,IAAAC,cAAA,SACEQ,KAAK,OACLC,MAAOtB,EACPuB,SAAWP,GAAMf,EAAce,EAAEQ,OAAOF,OACxCG,YAAY,0BACZX,UAAU,eAEZF,IAAAC,cAAA,UAAQQ,KAAK,SAASP,UAAU,iBAAgB,WAElDF,IAAAC,cAAA,KAAGC,UAAU,WAAU,yBAAuBjB,KC1BrC6B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAb,EAAA,GAAAZ,KAAAyB,EAAAC,KAAA,UAAqB1B,KAAK2B,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7B,IAAAC,cAACD,IAAM8B,WAAU,KACf9B,IAAAC,cAACjB,EAAG,QAOR8B","file":"static/js/main.4958f48f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css'; // Make sure you have this file for custom styles\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    fetch(\"/api/hello\")\n      .then(res => res.text())\n      .then(data => setMessage(data))\n      .catch(err => console.error(\"Error fetching data:\", err));\n  }, []);\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    // Here you can modify the fetch call to handle search queries based on the searchTerm\n    fetch(`/api/search?q=${searchTerm}`)\n      .then(res => res.json())\n      .then(data => {\n        setMessage(data.result); // Assuming the response has a 'result' field\n      })\n      .catch(err => console.error(\"Error fetching search data:\", err));\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"app-header\">React + Spring Boot</h1>\n      <form onSubmit={handleSearch} className=\"search-form\">\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          placeholder=\"Type your query here...\"\n          className=\"search-bar\"\n        />\n        <button type=\"submit\" className=\"search-button\">Search</button>\n      </form>\n      <p className=\"message\">Message from backend: {message}</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}